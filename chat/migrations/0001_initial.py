# Generated by Django 5.2.3 on 2025-07-30 15:13

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=255, unique=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('archived', 'Archived')], default='active', max_length=20)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('total_messages', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chat_sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='FineTuningDataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('disease_name', models.CharField(max_length=100)),
                ('instruction', models.TextField()),
                ('input_text', models.TextField(blank=True)),
                ('output_text', models.TextField()),
                ('source', models.CharField(choices=[('chat_history', 'Chat History'), ('manual_curation', 'Manual Curation'), ('expert_knowledge', 'Expert Knowledge'), ('medical_literature', 'Medical Literature')], max_length=50)),
                ('quality_score', models.FloatField(default=1.0)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'fine_tuning_dataset',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=20)),
                ('content', models.TextField()),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('quick_question', 'Quick Question'), ('error', 'Error'), ('system', 'System Message')], default='text', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.chatsession')),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_questions', models.IntegerField(default=0)),
                ('disease_related_questions', models.IntegerField(default=0)),
                ('diabetes_questions', models.IntegerField(default=0)),
                ('malaria_questions', models.IntegerField(default=0)),
                ('average_response_time', models.FloatField(blank=True, null=True)),
                ('user_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('common_topics', models.JSONField(blank=True, default=list)),
                ('sentiment_analysis', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chat.chatsession')),
            ],
            options={
                'verbose_name_plural': 'Chat Analytics',
                'db_table': 'chat_analytics',
            },
        ),
        migrations.CreateModel(
            name='DiseaseQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('disease_name', models.CharField(max_length=100)),
                ('query_text', models.TextField()),
                ('response_text', models.TextField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('query_type', models.CharField(choices=[('trends', 'Trends'), ('prediction', 'Prediction'), ('symptoms', 'Symptoms'), ('prevention', 'Prevention'), ('treatment', 'Treatment'), ('general', 'General')], max_length=50)),
                ('user_feedback', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral'), ('not_provided', 'Not Provided')], default='not_provided', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.chatsession')),
            ],
            options={
                'db_table': 'disease_queries',
                'ordering': ['-created_at'],
            },
        ),
    ]
