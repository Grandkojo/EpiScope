# Generated by Django 5.2.3 on 2025-08-11 03:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('disease_monitor', '0014_googletrendscache_googletrendsmetrics_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('diabetes', 'Diabetes'), ('malaria', 'Malaria'), ('research', 'Research')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for tag display', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Icon class for tag display', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Article Tag',
                'verbose_name_plural': 'Article Tags',
                'db_table': 'article_tags',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Article title', max_length=255)),
                ('slug', models.CharField(help_text='URL-friendly identifier', max_length=255, unique=True)),
                ('summary', models.TextField(help_text='Brief summary/abstract of the article')),
                ('content', models.TextField(help_text='Full article content')),
                ('article_type', models.CharField(choices=[('article', 'Article'), ('blog', 'Blog Post'), ('research', 'Research Paper'), ('guideline', 'Guideline'), ('case_study', 'Case Study')], default='article', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('author_name', models.CharField(help_text="Author's full name", max_length=255)),
                ('author_credentials', models.CharField(blank=True, help_text="Author's credentials/qualifications", max_length=255, null=True)),
                ('author_affiliation', models.CharField(blank=True, help_text="Author's institution/organization", max_length=255, null=True)),
                ('publication_date', models.DateField(help_text='Date when article was published')),
                ('estimated_read_time', models.PositiveIntegerField(help_text='Estimated reading time in minutes')),
                ('reference_link', models.URLField(help_text='Link to the original source/reference')),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier if available', max_length=100, null=True)),
                ('likes_count', models.PositiveIntegerField(default=0, help_text='Number of likes')),
                ('comments_count', models.PositiveIntegerField(default=0, help_text='Number of comments')),
                ('views_count', models.PositiveIntegerField(default=0, help_text='Number of views')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, help_text='Number of bookmarks')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO', null=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Featured image for the article', null=True, upload_to='articles/images/')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this article is featured on the homepage')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, help_text='When the article was published', null=True)),
                ('tags', models.ManyToManyField(help_text='Article tags/categories', related_name='articles', to='disease_monitor.articletag')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'db_table': 'articles',
                'ordering': ['-publication_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the viewer', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string', null=True)),
                ('session_id', models.CharField(blank=True, help_text='Session ID for anonymous users', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='disease_monitor.article')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article View',
                'verbose_name_plural': 'Article Views',
                'db_table': 'article_views',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_type', models.CharField(choices=[('systematic_review', 'Systematic Review'), ('meta_analysis', 'Meta-Analysis'), ('randomized_trial', 'Randomized Controlled Trial'), ('cohort_study', 'Cohort Study'), ('case_control', 'Case-Control Study'), ('cross_sectional', 'Cross-Sectional Study'), ('qualitative', 'Qualitative Study'), ('mixed_methods', 'Mixed Methods Study'), ('other', 'Other')], help_text='Type of research paper', max_length=30)),
                ('abstract', models.TextField(help_text='Research abstract')),
                ('keywords', models.JSONField(default=list, help_text='List of research keywords')),
                ('methodology', models.TextField(help_text='Research methodology description')),
                ('sample_size', models.PositiveIntegerField(blank=True, help_text='Sample size of the study', null=True)),
                ('study_duration', models.CharField(blank=True, help_text='Duration of the study', max_length=100, null=True)),
                ('key_findings', models.TextField(help_text='Key findings of the research')),
                ('conclusions', models.TextField(help_text='Research conclusions')),
                ('limitations', models.TextField(blank=True, help_text='Study limitations', null=True)),
                ('journal_name', models.CharField(blank=True, help_text='Journal where paper was published', max_length=255, null=True)),
                ('volume_issue', models.CharField(blank=True, help_text='Journal volume and issue', max_length=100, null=True)),
                ('page_numbers', models.CharField(blank=True, help_text='Page numbers in journal', max_length=50, null=True)),
                ('impact_factor', models.FloatField(blank=True, help_text='Journal impact factor if available', null=True)),
                ('citation_count', models.PositiveIntegerField(default=0, help_text='Number of citations')),
                ('references', models.JSONField(default=list, help_text='List of references cited')),
                ('h_index', models.PositiveIntegerField(default=0, help_text='H-index of the research')),
                ('research_quality_score', models.FloatField(blank=True, help_text='Quality score (0-100)', null=True)),
                ('funding_source', models.CharField(blank=True, help_text='Source of research funding', max_length=255, null=True)),
                ('ethical_approval', models.CharField(blank=True, help_text='Ethical approval details', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='research_paper', to='disease_monitor.article')),
            ],
            options={
                'verbose_name': 'Research Paper',
                'verbose_name_plural': 'Research Papers',
                'db_table': 'research_papers',
                'ordering': ['-article__publication_date'],
            },
        ),
        migrations.CreateModel(
            name='ArticleBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='disease_monitor.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Bookmark',
                'verbose_name_plural': 'Article Bookmarks',
                'db_table': 'article_bookmarks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['article', 'user'], name='article_boo_article_6665b4_idx'), models.Index(fields=['user', 'created_at'], name='article_boo_user_id_8841f4_idx')],
                'unique_together': {('article', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Comment content')),
                ('is_approved', models.BooleanField(default=True, help_text='Whether comment is approved by moderators')),
                ('is_flagged', models.BooleanField(default=False, help_text='Whether comment has been flagged for review')),
                ('likes_count', models.PositiveIntegerField(default=0, help_text='Number of likes on this comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='disease_monitor.article')),
                ('parent_comment', models.ForeignKey(blank=True, help_text='Parent comment for replies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='disease_monitor.articlecomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Comment',
                'verbose_name_plural': 'Article Comments',
                'db_table': 'article_comments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['article', 'created_at'], name='article_com_article_264ef9_idx'), models.Index(fields=['user', 'created_at'], name='article_com_user_id_f2034d_idx'), models.Index(fields=['parent_comment', 'created_at'], name='article_com_parent__f4bb8c_idx'), models.Index(fields=['is_approved', 'created_at'], name='article_com_is_appr_ba2634_idx')],
            },
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='disease_monitor.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Like',
                'verbose_name_plural': 'Article Likes',
                'db_table': 'article_likes',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['article', 'user'], name='article_lik_article_986069_idx'), models.Index(fields=['user', 'created_at'], name='article_lik_user_id_a6b08f_idx')],
                'unique_together': {('article', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['slug'], name='articles_slug_c8b0c2_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'publication_date'], name='articles_status_a6e717_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['article_type', 'status'], name='articles_article_e3ed4e_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_featured', 'status'], name='articles_is_feat_9d8dc4_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['author_name'], name='articles_author__b7baa9_idx'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['article', 'created_at'], name='article_vie_article_a22609_idx'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['user', 'created_at'], name='article_vie_user_id_95f550_idx'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['ip_address', 'created_at'], name='article_vie_ip_addr_955361_idx'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['session_id', 'created_at'], name='article_vie_session_767175_idx'),
        ),
        migrations.AddIndex(
            model_name='researchpaper',
            index=models.Index(fields=['paper_type'], name='research_pa_paper_t_16443e_idx'),
        ),
        migrations.AddIndex(
            model_name='researchpaper',
            index=models.Index(fields=['journal_name'], name='research_pa_journal_b0c16f_idx'),
        ),
        migrations.AddIndex(
            model_name='researchpaper',
            index=models.Index(fields=['citation_count'], name='research_pa_citatio_78525c_idx'),
        ),
    ]
